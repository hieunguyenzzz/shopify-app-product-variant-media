{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport App from \"next/app\";\nimport { AppProvider } from \"@shopify/polaris\";\nimport { Provider, useAppBridge } from \"@shopify/app-bridge-react\";\nimport { authenticatedFetch } from \"@shopify/app-bridge-utils\";\nimport { Redirect } from \"@shopify/app-bridge/actions\";\nimport \"@shopify/polaris/dist/styles.css\";\nimport translations from \"@shopify/polaris/locales/en.json\";\n\nfunction userLoggedInFetch(app) {\n  var fetchFunction = authenticatedFetch(app);\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(uri, options) {\n      var response, authUrlHeader, redirect;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetchFunction(uri, options);\n\n            case 2:\n              response = _context.sent;\n\n              if (!(response.headers.get(\"X-Shopify-API-Request-Failure-Reauthorize\") === \"1\")) {\n                _context.next = 8;\n                break;\n              }\n\n              authUrlHeader = response.headers.get(\"X-Shopify-API-Request-Failure-Reauthorize-Url\");\n              redirect = Redirect.create(app);\n              redirect.dispatch(Redirect.Action.APP, authUrlHeader || \"/auth\");\n              return _context.abrupt(\"return\", null);\n\n            case 8:\n              return _context.abrupt(\"return\", response);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}\n\nfunction MyProvider(props) {\n  var app = useAppBridge();\n  var client = new ApolloClient({\n    fetch: userLoggedInFetch(app),\n    fetchOptions: {\n      credentials: \"include\"\n    }\n  });\n  var Component = props.Component;\n  return __jsx(ApolloProvider, {\n    client: client\n  }, __jsx(Component, props));\n}\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          host = _this$props.host;\n      return __jsx(AppProvider, {\n        i18n: translations\n      }, __jsx(Provider, {\n        config: {\n          apiKey: API_KEY,\n          host: host,\n          forceRedirect: true\n        }\n      }, __jsx(MyProvider, _extends({\n        Component: Component\n      }, pageProps))));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nMyApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2) {\n    var ctx;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            ctx = _ref2.ctx;\n            return _context2.abrupt(\"return\", {\n              host: ctx.query.host\n            });\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default MyApp;","map":null,"metadata":{},"sourceType":"module"}